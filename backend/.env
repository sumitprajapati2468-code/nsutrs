NODE_ENV=development
PORT=5000

# Database
MONGODB_URI=mongodb+srv://sumitprajapati2468_db_user:RSproject25@rs-backend.d1fzfje.mongodb.net/

# JWT
JWT_SECRET=rider-sathi-super-secret-jwt-key-2025-development
JWT_EXPIRE=7d

# External APIs
OPENWEATHER_API_KEY=e67f7f896424c3fb60d7a235203699f7
RASA_URL=http://localhost:5005
## NOTE: Previously used OPENAI/Google keys. We're switching to GROQ provider.
# Add your GROQ API key here (do NOT commit this file with a real key)
# The model you want to call on Groq (examples as of 2025: llama-3.1-8b-instant, llama-3.1-70b-versatile, mixtral-8x7b-32768)
GROQ_MODEL=llama-3.1-8b-instant
# Full Groq API URL (optional). If not set, the proxy will use the default pattern.
# Example: https://api.groq.ai/v1/models/groq-1/outputs
GROQ_API_KEY=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
# Full Groq API URL (optional). If not set, the proxy will use the default pattern.
# Example: https://api.groq.ai/v1/models/groq-1/outputs
# Override base URL only if different from default OpenAI-compatible endpoint
# Leave empty to use https://api.groq.com/openai/v1/chat/completions
GROQ_API_URL=

# Set provider to 'groq' to use Groq.ai for generative responses
GENERATIVE_PROVIDER=groq

# OSRM Server (for routing)
OSRM_URL=http://router.project-osrm.org

# Overpass API (for POI search)  
OVERPASS_URL=https://overpass-api.de/api/interpreter

# CORS Configuration
CORS_ORIGIN=http://localhost:3000

# TURN/STUN servers for WebRTC
TURN_SERVER_URL=turn:your-turn-server.com:3478
TURN_USERNAME=username
TURN_PASSWORD=password
STUN_SERVER_URL=stun:stun.l.google.com:19302
